@using Supdate.Model
@using Supdate.Util
@using Supdate.Web.App.Models
@model GoalSettings
@{
  ViewBag.Title = String.Format("{0} Goals", ViewBag.SelectAreaName ?? String.Empty);
  var isCompanyOwner = ViewBag.IsCompanyAdmin;
}

<div class="row">
  <div class="col-lg-12">
    <section class="panel">
      <header class="panel-heading panel-heading-main">
        @ViewBag.Title
        <div class="pull-right">
          @if (ViewBag.FilterListShow)
          {
            <div class="btn-group">
              <button data-toggle="dropdown" class="btn dropdown-toggle btn-white btn-sm" type="button">@ViewBag.FilterListTitle <span class="caret"></span></button>
              <ul role="menu" class="dropdown-menu" id="filter-menu">
                <li data-option=""><a href="@Url.Action("Index", new  {areaUniqueId = String.Empty})">All Goals</a></li>
                <li class="divider"></li>
                @foreach (var area in Model.ListHelper.GetAreas())
                {
                  <li data-option="@area.UniqueId"><a href="@Url.Action("Index", new { areaUniqueId = area.UniqueId })">@area.Name Goals</a></li>
                }
              </ul>
            </div>
          }
          <a class="btn-md btn-add-new" href="#" data-modal-url="@Url.Action("Details", new { uniqueId = Guid.Empty, areaUniqueId = ViewBag.FilterListIndex })"><i class="fa fa-plus"></i> Add New</a>
        </div>
      </header>
      <div class="panel-body">
        <form class="form-vertical tasi-form" role="form">
          <div class="form-group col-sm-12">
            <p class="help-block">Goals are simply things you want to get done.</p>
            <p class="help-block">Define your Goals and when you create a report you can choose which goals to report on.</p>
          </div>
          @if (Model.Goals.Any())
          {
            <div class="form-group col-sm-12">
              <table class="table table-striped table-hover">
                <thead>
                <tr>
                  <th class="w100 text-center">Status</th>
                  <th>Name</th>
                  <th class="hidden-xs">Due Date</th>
                  <th class="hidden-xs">Reporting Area</th>
                </tr>
                </thead>
                <tbody>
                  @foreach (var goal in Model.Goals)
                  {
                    var editUrl = Url.Action("Details", new { uniqueId = goal.UniqueId, areaUniqueId = ViewBag.FilterListIndex });
                    var goalStatusClass = goal.StatusClass();
                    var dateClass = (goal.Overdue) ? "text-danger" : "";
                    <tr data-modal-url="@editUrl" class="row-clickable" data-goal-id="@goal.UniqueId">
                      <td><span class="goal-status @goalStatusClass">@goal.Status.DisplayName()</span></td>
                      <td><a class="helper" href="#">@goal.Title</a></td>
                      <td class="hidden-xs @dateClass">
                        @if (goal.DueDate.HasValue)
                        {
                          @goal.DueDate.Value.ToString("dd MMM yyyy")
                        }
                      </td>
                      <td class="hidden-xs">@Model.ListHelper.GetAreaName(goal.AreaId ?? -1)</td>
                    </tr>
                  }
                </tbody>
              </table>
            </div>
          }
          else
          {

            if (!isCompanyOwner && Model.ListHelper.AreaList.Count == 0)
            {
              @Html.Partial("_NoReportingAreas")
            }
            else
            {
              @Html.Partial("_blankSlate", new BlankSlateModel
              {
                Url = @Url.Action("Details", new { uniqueId = Guid.Empty, areaUniqueId = ViewBag.FilterListIndex }),
                EntityName = String.Format("{0} Goal", ViewBag.SelectAreaName ?? String.Empty)
              })
            }
          }
        </form>
      </div>
    </section>
  </div>
</div>
@section scripts{
  <script>
    $('#filter-menu>li[data-option="@ViewBag.FilterListIndex"]').addClass('active');
  </script>
}
